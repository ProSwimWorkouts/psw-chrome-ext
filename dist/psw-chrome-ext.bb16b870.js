let e=[],t=document.getElementById("workouts-list"),o=document.getElementById("workouts-loading"),n=document.getElementById("updateP-el"),a="";const r=document.getElementById("refresh-btn");function s(){fetch("https://proswimworkouts.com/wp-json/wp/v2/workouts?per_page=10&orderby=modified").then(e=>{if(!e.ok)throw Error("Network response was not ok");return e.json()}).then(t=>{e=t,localStorage.setItem("pswWorkouts",JSON.stringify(e)),l(e)}).catch(e=>{console.error("Error:",e)})}function l(e){let o="";for(let t=0;t<e.length;t++){let n=new Date(e[t].date);o+=`<li class="pt-1 mb-2">
        <a class="hover:text-orange-700 hover:font-bold" href='${e[t].link}' target='_blank'>
          ${e[t].title.rendered}
        </a>
        <br/><span class="italic text-xs text-sky-700">Published on ${n.toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric",year:"numeric"})} </span>
      </li>`}t.innerHTML=o}window.setTimeout(function(){localStorage.getItem("pswWorkouts")?(console.log("Workouts already in local storage."),a=localStorage.getItem("lastUpdate"),n.innerHTML=`<span class="font-medium">Last updated on ${a}</span>`,o.classList.remove("hidden"),setTimeout(()=>{l(JSON.parse(localStorage.getItem("pswWorkouts"))),o.classList.add("hidden")},500)):(t.innerHTML='<li class="italic font-medium text-orange-700">Loading workouts ...</li>',console.log("Workouts not currently in local storage."),s())},500),r.addEventListener("click",function(){a=new Date().toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"}),n.innerHTML=`<span class="font-medium">Last updated on ${a}</span>`,localStorage.clear(),localStorage.setItem("lastUpdate",a),t.innerHTML='<li class="italic font-medium text-orange-700">Updating workouts ...</li>',s()});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
